// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var $$String = require("bs-platform/lib/js/string.js");

function str(prim) {
  return prim;
}

function Task(Props) {
  var task = Props.task;
  var onDestroy = Props.onDestroy;
  var onEdit = Props.onEdit;
  var onChange = Props.onChange;
  var editing = Props.editing;
  var onCancel = Props.onCancel;
  var onSave = Props.onSave;
  var match = React.useReducer((function (state, action) {
          if (typeof action === "number") {
            return /* record */[/* editText */task[/* title */1]];
          } else if (action.tag) {
            var match = action[0];
            if (match !== 13) {
              if (match !== 27) {
                return state;
              } else {
                Curry._1(onCancel, /* () */0);
                return /* record */[/* editText */task[/* title */1]];
              }
            } else {
              var state$1 = state;
              var nonEmpty = $$String.trim(state$1[/* editText */0]);
              if (nonEmpty === "") {
                Curry._1(onDestroy, /* () */0);
                return state$1;
              } else {
                Curry._1(onSave, nonEmpty);
                return /* record */[/* editText */nonEmpty];
              }
            }
          } else {
            return /* record */[/* editText */action[0]];
          }
        }), /* record */[/* editText */""]);
  var dispatch = match[1];
  return React.createElement("li", {
              key: String(task[/* id */0]),
              className: "item"
            }, React.createElement("input", {
                  checked: task[/* completed */2],
                  type: "checkbox",
                  onChange: onChange
                }), React.createElement("label", {
                  onDoubleClick: (function (_event) {
                      Curry._1(onEdit, /* () */0);
                      return Curry._1(dispatch, /* Edit */0);
                    })
                }, editing ? React.createElement("input", {
                        autoFocus: true,
                        type: "text",
                        value: match[0][/* editText */0],
                        onKeyDown: (function ($$event) {
                            return Curry._1(dispatch, /* KeyDown */Block.__(1, [$$event.which]));
                          }),
                        onChange: (function ($$event) {
                            return Curry._1(dispatch, /* Change */Block.__(0, [$$event.target.value]));
                          })
                      }) : task[/* title */1]), React.createElement("button", {
                  onClick: (function (param) {
                      return Curry._1(onDestroy, /* () */0);
                    })
                }, "Delete"));
}

var trim = $$String.trim;

var make = Task;

exports.str = str;
exports.trim = trim;
exports.make = make;
/* react Not a pure module */
